name: Pull Request Tests

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linting
        run: |
          # Check if biome is configured and run it
          if [ -f "biome.json" ]; then
            bunx @biomejs/biome check src/
          fi

      - name: Run tests
        run: bun test

      - name: Build package
        run: bun run build

      - name: Test build outputs
        run: bun run test:build

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… All tests passed! The build completed successfully and the package is ready for review.'
            })

  # Run tests on multiple versions to ensure compatibility
  compatibility-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: ['1.0.0', 'latest']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Build package
        run: bun run build 
